import java.util.Arrays;
Integer[] num=new Integer[] {5,3,4,2,1};
Arrays.sort(num);			//이때, 왜 arryas에서 바로 sort가 가능한가?
for(int i=0;i<num.length;i++)
    System.out.println(num[i]);


구글에 arrays class라고 쳐서 오라클 홈피에 보면 static void 로 정의된 것은 오버라이딩 돼서 
바로 가져다 쓸 수 있다는 것. 



Integer[] data={new Integer(3), new Integer(1), new Integer(4), new Integer(2)};
for(int i=data.length-1;i>=0;i--) {
    int indexOfMax=0;
    for(int j=1;j<=i;j++) {
        if(data[j] > data[indexOfMax])
            indexOfMax=j;
        }
    Integer temp=data[i];
    data[i]=data[indexOfMax];
    data[indexOfMax]=temp;
}

for(int i=0; i<data.length; i++)
    System.out.println("data["+i+"]="+data[i]);


원래는 이렇게 긴 함수인데, import Arrays를 하면 중복(고정)된 8줄은 없어지고,
변동되는 2줄을 위주로 쓸 수 있게 된다. 제공하는 template을 쓰기 때문




-----------------
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
List<Integer> num=new ArrayList<Integer>();
num.add(7);	//얘는 array가 아니라 list이기 때문에 num[0]=7; 이렇게 넣지 않고 리스트방식으로 add메쏘드를 써서 넣어야 함.
num.add(6);
num.add(9);
num.add(8);
num.add(5);
Collections.sort(num);
for(int i=0;i<num.size();i++)
    System.out.println(num.get(i));

